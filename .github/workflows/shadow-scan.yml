name: Shadow Scan and Issue Replication
on:
  schedule:
    # Run nightly at 2 AM UTC (same as Cirrus CI nightly cron)
    - cron: '0 2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  shadow-scan:
    runs-on: github-ubuntu-latest-s  # Public repo - use custom GitHub-hosted runner
    name: Shadow Scan - ${{ matrix.name }}
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access
    strategy:
      matrix:
        include:
          - name: "sonarcloud.io"
            shadow_token_path: "development/kv/data/sonarcloud"
            shadow_host_url: "https://sonarcloud.io"
          - name: "sonarqube.us" 
            shadow_token_path: "development/kv/data/sonarqube-us"
            shadow_host_url: "https://sonarqube.us"
    env:
      SONAR_PROJECT_KEY: "org.sonarsource.java:jdt-package"
      SHADOW_ORGANIZATION: "sonarsource"
      SHADOW_PROJECT_KEY: "SonarSource_sonar-java-jdt"
      SHADOW_SONAR_HOST_URL: ${{ matrix.shadow_host_url }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2.4.4
        with:
          version: 2025.7.12
      - name: Fetch secrets from Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@320bd31b03e5dacaac6be51bbbb15adf7caccc32 # v3.1.0
        with:
          secrets: |
            development/kv/data/next token | SONAR_TOKEN;
            ${{ matrix.shadow_token_path }} token | SHADOW_SONAR_TOKEN;
      - name: Run shadow scan and issue replication
        env:
          SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SONAR_TOKEN }}
          SONAR_HOST_URL: "https://next.sonarqube.com/sonarqube"
          SHADOW_SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SHADOW_SONAR_TOKEN }}
        run: |
          # Source the build environment
          source cirrus-env BUILD
          # Run the shadow scan script
          ./shadow-scan-and-issue-replication.sh